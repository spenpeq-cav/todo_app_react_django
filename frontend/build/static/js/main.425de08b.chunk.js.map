{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","useState","todoList","setTodoList","id","title","completed","activeItem","setActiveItem","editing","setEditing","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fetchTasks","console","log","fetch","then","response","json","data","useEffect","className","onSubmit","e","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","style","flex","onChange","value","target","type","placeholder","map","task","index","onClick","strikeUnstrike","startEdit","deleteItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.425de08b.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport { act } from 'react-dom/test-utils';\nimport './App.css';\n\nexport default function App(props){\n  var [todoList, setTodoList]= useState([])\n  var [activeItem, setActiveItem] = useState({id:null, title:'',completed:false})\n  var [editing, setEditing] = useState(false)\n  \n  function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n  }\n\n  useEffect(() => {\n    fetchTasks()\n  },[]);\n\n  function fetchTasks(){\n    console.log('Fetching...')\n    var url = 'http://127.0.0.1:8000/api/task-list/'\n    fetch(url)\n      .then(response => response.json())\n        .then(data => setTodoList(data))\n  }\n\n  function handleChange(e){\n    var value = e.target.value\n    setActiveItem({...activeItem, title: value})\n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n    console.log('ITEM: ', activeItem)\n\n    var csrftoken = getCookie('csrftoken')\n    var url = 'http://127.0.0.1:8000/api/task-create/'\n\n    if(editing == true){\n      var url = `http://127.0.0.1:8000/api/task-update/${activeItem.id}`\n      setEditing(false)\n    }\n\n    fetch(url, {\n      method: 'POST',\n      headers:{\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify(activeItem)\n      }).then((response) => {\n        fetchTasks()\n        setActiveItem({id:null, title:'',completed:false})\n      }).catch(function(error) {\n        console.log('ERROR:', error)\n      })\n  }\n\n  function startEdit(task){\n    setActiveItem(task)\n    setEditing(true)\n  }\n\n  function deleteItem(task){\n    var csrftoken = getCookie('csrftoken')\n    var url = `http://127.0.0.1:8000/api/task-delete/${task.id}`\n\n    fetch(url,{\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n    }).then((response) => {\n        fetchTasks()\n      })\n  }\n\n  function strikeUnstrike(task){\n    task.completed = !task.completed\n\n    var csrftoken = getCookie('csrftoken')\n    var url = `http://127.0.0.1:8000/api/task-update/${task.id}`\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body: JSON.stringify({'completed': task.completed, 'title': task.title})\n    }).then(() => {\n        fetchTasks()\n      })\n\n    console.log('TASK: ', task.completed)\n  }\n\n  \n  return(\n    <div className=\"container\">\n      <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n              <form id=\"form\" onSubmit={handleSubmit} >\n\n                  <div className=\"flex-wrapper\">\n                      <div style={{flex: 6}}>\n                          <input id=\"title\" className=\"form-control\" onChange={handleChange} value= {activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task\" />\n                      </div>\n                      <div style={{flex: 1}}>\n                          <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" />\n                      </div>\n                  </div>\n\n              </form>\n          </div>\n\n          <div id=\"list-wrapper\">\n            {todoList.map(function(task, index){\n              return(\n                <div key={index} className=\"task-wrapper flex-wrapper\">\n\n                  <div style={{flex: 7}} onClick={() => strikeUnstrike(task)}>\n                    {task.completed == false ? (\n                      <span>{task.title}</span>\n                      ) : (\n                        <strike>{task.title}</strike>\n                      )\n                    }\n                  </div>\n\n                  <div style={{flex: 1}}>\n                    <button className=\"btn btn-sm btn-outline-info\" onClick={() => startEdit(task)}>Edit</button>\n                  </div>\n\n                  <div style={{flex: 1}}>\n                    <button className=\"btn btn-sm btn-outline-dark delete\" onClick={() => deleteItem(task)}>-</button>\n                  </div>\n\n                </div>\n              )\n            })}\n          </div>\n\n      </div>\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}